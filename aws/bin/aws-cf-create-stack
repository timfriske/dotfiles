#!/usr/bin/env bash

# AWS CloudFormation Create Stack command
# =======================================
# Tim Friske <me@tifr.de>
#
# Creates an AWS CloudFormation stack from the given template file (cft.yml) and
# config file (cfc.json). Optionally the stack name from the config file may be
# overridden if given as the third positional parameter.
#
# Deps:: aws, bash, env, jq

# Ensure fail-fast script execution.
shopt -os nounset pipefail errexit errtrace

# Input parameters:
template_file="${1:-"${template_file:?required}"}"
config_file="${2:-"${config_file:?required}"}"
stack_name="${3:-"${stack_name:-}"}" # optional override

# Derived parameters:
template_file="${template_file/#/file://}" # Prepend 'file://'
stack_name="${stack_name:-"$(jq --raw-output '.StackName' -- "${config_file}")"}"
parameters="$(jq --compact-output '.Parameters' -- "${config_file}")"
no_rollback="$(jq --raw-output 'select(.DisableRollback|not)|"no-"' -- "${config_file}")"
tags="$(jq --compact-output '.Tags' -- "${config_file}")"
no_term_prot="$(jq --raw-output 'select(.EnableTerminationProtection|not)|"no-"' -- "${config_file}")"

# Create stack and wait until it is completely created:
aws cloudformation create-stack \
  --stack-name "${stack_name}" \
  --template-body "${template_file}" \
  --parameters "${parameters}" \
  --"${no_rollback}disable-rollback" \
  --capabilities CAPABILITY_IAM \
  --tags "${tags}" \
  --"${no_term_prot}enable-termination-protection" \
  | jq --raw-output '.StackId'
aws cloudformation wait stack-create-complete --stack-name "${stack_name}"
