#!/usr/bin/env bash

# AWS S3 Restore Object command
# =============================
# Tim Friske <me@tifr.de>
#
# Deps:: aws, bash, env

# Ensure fail-fast execution.
shopt -os nounset noclobber pipefail errexit errtrace

# Define usage text.
USAGE="usage: ${0##*/} -u | -h | -b BUCKET -k KEY -d DAYS -t TIER"

# Define help text.
read -r -d'\0' HELP <<'HELP' || true
Restore an AWS S3 object with the given key from the given bucket for
the given number of days with the given retrieval tier (speed level).
Options:
  -u  Print usage text.
  -h  Print help text.
  -b  AWS S3 bucket name, e.g. "my-globally-unique-aws-s3-bucket".
  -k  AWS S3 object key, e.g. "my/bucket-unique/aws-s3-object.txt".
  -d  number of days. e.g. "7".
  -t  data retrieval tier, one of "Standard", "Bulk", "Expedited".
HELP

# Print help text if no options or arguments were given.
if (( "${#}" == 0 )); then
  printf '%s\n' "${HELP}"
  exit
fi

# Parse options.
OPTS='uhb:k:d:t:'
while getopts "${OPTS}" OPT; do
  case "${OPT}" in
    'u') printf '%s\n' "${USAGE}"; exit;;
    'h') printf '%s\n' "${HELP}"; exit;;
    'b') BUCKET="${OPTARG}";;
    'k') KEY="${OPTARG}";;
    'd') DAYS="${OPTARG}";;
    't') TIER="${OPTARG}";;
    '?') printf '%s\n' "${HELP}"; exit 1;;
  esac
done

# Validate options.
: "${BUCKET:?required}"
: "${KEY:?required}"
: "${DAYS:?required}"
: "${TIER:?required}"

# Restore AWS S3 object.
printf '%s\n' "s3://${BUCKET}/${KEY}"
aws s3api restore-object \
  --bucket "${BUCKET}" \
  --key "${KEY}" \
  --restore-request "$(printf '{"Days":%s,"GlacierJobParameters":{"Tier":"%s"}}' "${DAYS}" "${TIER}")"
