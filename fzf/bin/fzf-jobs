#!/usr/bin/env bash
#
# Manage jobs with fuzzy finder
# =============================
# Tim Friske <me@tifr.de>
#
# List, background and foreground jobs.
#
# See also:
#   * man:bash[1]
#   * man:fzf[1]
#   * man:cat[1]

# Ensure fail-fast script execution.
shopt -os nounset pipefail errexit errtrace

# Enable shell options for extra capabilities.
shopt -s extglob globstar

function print_help {
  1>&2 cat \
<<'HELP'
usage:

  jb() {
    eval "$(jobs | cmd='bg' fzf-jobs "${@}")"
  }

  jd() {
    eval "$(jobs | cmd='disown' fzf-jobs "${@}")"
  }

  jdh() {
    eval "$(jobs | cmd='disown -h' fzf-jobs "${@}")"
  }

  jf() {
    eval "$(jobs | cmd='fg' fzf-jobs "${@}")"
  }

  jj() {
    eval "$(jobs | cmd='jobs' fzf-jobs "${@}")"
  }

  jkc() {
    eval "$(jobs | cmd='kill -SIGCONT' fzf-jobs "${@}")"
  }

  jkk() {
    eval "$(jobs | cmd='kill -SIGKILL' fzf-jobs "${@}")"
  }

  jkt() {
    eval "$(jobs | cmd='kill -SIGTERM' fzf-jobs "${@}")"
  }
HELP
}

function print_job_cmd_line {
  (( "${#}" == 0 )) && return
  local cmd="${cmd:?required}"
  printf '%s ' "${cmd}" "${@}"
  printf '\n'
}

function fzf_jobs {
  if [[ -t 0 ]]; then
    print_help
    exit
  elif (( "${#}" > 0 )); then
    print_job_cmd_line "${@}"
    exit
  fi

  local fzf_options=() fzf_default_opts fzf_jobs_fzf_opts
  read -r -a fzf_default_opts <<< "${FZF_DEFAULT_OPTS:-}"
  read -r -a fzf_jobs_fzf_opts <<< "${FZF_JOBS_FZF_OPTS:-}"
  fzf_options+=("${fzf_default_opts[@]}")
  fzf_options+=("${fzf_jobs_fzf_opts[@]}")
  fzf_options+=(--print0)

  local job='' jobspecs=()
  while read -r -d '' job; do
    if [[ "${job}" =~ ^\[([[:digit:]]+)\] ]]; then
      jobspecs+=("%${BASH_REMATCH[1]}")
    fi
  done < <(fzf "${fzf_options[@]}")

  print_job_cmd_line "${jobspecs[@]}"
}

fzf_jobs "${@}"
