#!/usr/bin/env bash

# Fuzzy-find Git Branches
# =======================
# Tim Friske <me@tifr.de>
#
# Program to let the user list _Git_ branches, fuzzy-find, pick and perform
# actions on those s/he is interested in. The branches are represented by their
# short reference names (refname:short) for quick identification. Each branch is
# hereby displayed on its own line. The branches are sorted by version under the
# assumption that they might contain version identfiers.
#
# Note that this program is intended for interactive use. For quick access it
# should be bound to a hot key such as `Ctrl-gb` (mnemonic `git branch') as
# follows:
#
# .Intended usage (`~/.bashrc`)
# [source,bash]
# ----
# # Test if fuzzy finder program _Fzf_ is installed.
# if type -p fzf &> /dev/null; then
#   if type -p fzf-git-branch &> /dev/null; then
#     bind -m vi-insert -x '"\C-gb": "fzf-git-branch"'
#     bind -m vi-command '"\C-gb": "i\C-gb"'
#     bind -m vi-insert -x \
#       '"\C-gr": "branch_opts=--remotes fzf-git-branch"'
#     bind -m vi-command '"\C-gr": "i\C-gr"'
#   fi
# fi
# ----
#
# See also:
#   * man:bash[1]
#   * man:fzf[1]
#   * man:git[1]

# Ensure fail-fast script execution.
shopt -os nounset pipefail errexit errtrace

function fzf_git_branch {
  local branch_options=() branch_opts_cust
  read -r -a branch_opts_cust <<< "${branch_opts:-}"
  branch_options+=('--list')
  branch_options+=('--format=%(refname:lstrip=2)')
  branch_options+=('--sort=version:refname')
  branch_options+=("${branch_opts_cust[@]}")

  local fzf_keys=()
  fzf_keys+=('alt-b:execute(git checkout -B {})+abort')
  fzf_keys+=('alt-c:execute(git checkout {})+abort')
  fzf_keys+=('alt-d:execute(git branch --delete {+})+abort')
  fzf_keys+=('alt-f:execute(git branch --delete --force {+})+abort')
  # shellcheck disable=SC2016
  {
    fzf_keys+=('alt-m:execute(< /dev/tty > /dev/tty git merge ${GIT_X_SIGNOFF:+"${GIT_X_SIGNOFF}"} {+})+abort')
    fzf_keys+=('alt-n:execute(< /dev/tty > /dev/tty git merge --no-ff ${GIT_X_SIGNOFF:+"${GIT_X_SIGNOFF}"} {+})+abort')
  }
  fzf_keys+=('alt-r:execute(git branch --delete --remotes {+})+abort')
  fzf_keys+=('alt-t:execute(git checkout --track {})+abort')
  fzf_keys+=('alt-v:execute(git log --max-count=1 --oneline --show-signature {})+abort')
  local fzf_keys_csv
  fzf_keys_csv="$(IFS=','; printf '%s\n' "${fzf_keys[*]}")"

  local fzf_options=() fzf_default_opts fzf_git_branch_fzf_opts fzf_opts_cust
  read -r -a fzf_default_opts <<< "${FZF_DEFAULT_OPTS:-}"
  read -r -a fzf_git_branch_fzf_opts <<< "${FZF_GIT_BRANCH_FZF_OPTS:-}"
  read -r -a fzf_opts_cust <<< "${fzf_opts:-}"
  fzf_options+=("${fzf_default_opts[@]}")
  fzf_options+=("--header=$(fmt='|type|: |object|' tbr='Branch' tta='Tag' tco='Commit' git-location)")
  fzf_options+=("--bind=$fzf_keys_csv")
  fzf_options+=("${fzf_git_branch_fzf_opts[@]}")
  fzf_options+=("${fzf_opts_cust[@]}")

  git branch "${branch_options[@]}" | fzf "${fzf_options[@]}"
}

fzf_git_branch "${@}"
