#!/usr/bin/env bash

# Mkdash command
# ==============
# Tim Friske <me@tifr.de>
#
# Creates an *empty* Dash shell script underneath the given file path. Creates
# any non-existing parent directories leading up to the file which contains the
# shell script. Makes the file executable such that it can be executed by
# specifying it in command-position (first word) on command line.
# 
# Adds a shebang line that instructs the operating system to let the Dash shell
# execute the shell script when it is run. Adds another line which specifies
# Dash options to ensure fail-fast script execution.
#
# Deps:: bash, cat, chmod, dash, dirname, env, wc

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

# Input parameters and argument validation.
script="${1:?script}"

# Create non-existent parent directories of shell sctipt file.
mkdir --parents --verbose -- "$(dirname -- "${script}")"

# Write shell script template to file.
cat > "${script}" \
<<SCRIPT
#!/usr/bin/env dash

# Ensure fail-fast script execution.
set -o errexit -o nounset


SCRIPT

# Make shell script file executable.
chmod --verbose -- a+x "${script}"

# Open shell script file in favorite text editor or vim by default. Put cursor
# on last line in insert mode if possible to ease editing.
case "${VISUAL:-"${EDITOR:-vim}"}" in
  nano) nano "+$(wc --lines < "{1}")" -- "${script}";;
  nvim) nvim '+normal G' +startinsert -- "${script}";;
  pico) pico "+$(wc --lines < "{1}")" -- "${script}";;
  vim) vim '+normal G' +startinsert -- "${script}";;
  *) "${VISUAL:-"${EDITOR}"}" "${script}";;
esac
