# shellcheck shell=bash

# Startup file for Bash login shells
# ==================================
# Tim Friske <me@tifr.de>
#
# The _Bash_ _Bourne Again Shell_ reads and executes commands from its
# configuration files but only if these exist and are readable. When started as
# a login shell it first reads its system-wide startup file `/etc/profile`. It
# then continues to read the first of its user- specific startup files
# `~/.bash_profile`, `~/bash_login` and `~/.profile` it encounters in that
# order. When a login shell is exited _Bash_ reads and executes commands from
# its user-specific shutdown file `~/.bash_logout`.
#
# This configuration file shall contain only non-default settings specific to
# login shells in order to keep it lean and thus easy to understand and
# maintain. In case an interactive login shell is started this startup file
# shall read and execute the commands from _Bash's_ user-specific startup file
# for interactive shells, namely `~/.bashrc`.
#
# See also:
#   * man:bash[1]
#   * link:{system-home}/profile
#   * link:{user-home}/.bash_profile
#   * link:{user-home}/.bash_login
#   * link:{user-home}/.bash_logout
#   * link:{user-home}/.bashrc

# Configure directories where to search for executable and sourceable files.
function _build_path {
  local _path _path_real
  local -a _paths=()
  local -A _paths_real=()
  for _path in "${HOME}"/{.local/,.jbang/}bin {/usr/{local/,},/}{,s}bin /snap/bin; do
    if [[ -d "${_path}" ]]; then
      # Resolve symlinks in path.
      _path_real="$(cd -- "${_path}" && pwd -P)"
      # Add path only if not already present.
      if [[ -z "${_paths_real[${_path_real}]+x}" ]]; then
        _paths_real["${_path_real}"]+=""
        _paths+=("${_path}")
      fi
    fi
  done
  # Print array of paths as colon-separated list.
  (IFS=":"; printf "%s" "${_paths[*]}")
}
export PATH
PATH="$(_build_path)"
unset -f _build_path

export PROMPT_COMMAND="tmux-pwd;${PROMPT_COMMAND}"
export PROMPT_DIRTRIM=3

# Define favorite (visual) text editor.
export EDITOR=vim VISUAL=vim

# Define sensible options for various programs via environment variables.
export BASENAME_X_OPTIONS='--multiple'

export CHGRP_X_OPTIONS='--changes --preserve-root'
export CHMOD_X_OPTIONS='--changes --preserve-root'
export CHOWN_X_OPTIONS='--changes --preserve-root'

export DF_X_OPTIONS='--print-type'
export DF_COMMON_X_OPTIONS='--exclude-type=devtmpfs --exclude-type=squashfs --exclude-type=tmpfs'
export FREE_X_OPTIONS='--human'

export DIFF_X_OPTIONS='--color=auto --unified --ignore-tab-expansion --ignore-space-change --ignore-trailing-space --ignore-blank-lines --ignore-all-space'
export GIT_X_SIGNOFF='--signoff'
export GREP_X_OPTIONS='--binary-files=without-match --color=auto  --devices=skip --directories=recurse'
export RIPGREP_X_OPTIONS='--smart-case'
export INFO_X_OPTIONS='--vi-keys'
export LS_X_OPTIONS='--classify --color=auto --time-style=long-iso --group-directories-first'

export MKDIR_X_OPTIONS='--parents --verbose'
export RMDIR_X_OPTIONS='--verbose'
export CP_X_OPTIONS='--interactive --verbose'
export MV_X_OPTIONS='--interactive --verbose'
export LN_X_OPTIONS='--interactive --verbose'
export RM_X_OPTIONS='--interactive --verbose'
export RSYNC_X_OPTIONS='--human-readable --progress'

export FZF_GIT_BRANCH_FZF_OPTS='--multi --exit-0'
export FZF_PPDS_FZF_OPTS='--height=1% --layout=reverse --multi --bind=ctrl-a:select-all,ctrl-d:deselect-all'
export FZF_GIT_TAG_FZF_OPTS='--multi --exit-0'
export FZF_JOBS_FZF_OPTS='--multi --exit-0'

export PAGER=less
export SYSTEMD_LESS="${LESS}"
export LESS='--no-init --tabs=4 --LONG-PROMPT --ignore-case --jump-target=.5 --hilite-unread --RAW-CONTROL-CHARS --chop-long-lines --quit-if-one-screen'

export SED_X_OPTIONS='--regexp-extended'

# Assume fully customized Git without need for system-wide settings.
export GIT_CONFIG_NOSYSTEM=true

export HISTSIZE=100000
export HISTFILE=~/.bash_history
export HISTFILESIZE="${HISTSIZE}"
export HISTTIMEFORMAT='%Y-%m-%d %H:%M:%S '
export HISTCONTROL=erasedups:ignorespace
export HISTIGNORE='+([[:alnum:]])*([[:space:]])'

export PARALLEL_X_OPTIONS='--no-run-if-empty --keep-order'

# Test if login shell has startup file with local overrides.
if [[ -f ~/.bash_login.local && -r ~/.bash_login.local ]]; then
  # Read and execute commands from that startup file.
  # shellcheck disable=SC1090
  source ~/.bash_login.local
fi

# Test if interactive shell and its startup file is readable.
if [[ "${-}" == *i* && -f ~/.bashrc && -r ~/.bashrc ]]; then
  # Read and execute commands from its startup file.
  # shellcheck disable=SC1090
  source ~/.bashrc
fi
