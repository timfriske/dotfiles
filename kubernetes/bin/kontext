#!/usr/bin/env bash

# Kontext command
# ===============
# Tim Friske <me@tifr.de>
#
# Manage Kubernetes contexts.
#
# Deps:: awk, bash, env, fzf, kubectl, xargs

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

function contexts { printf '%s\n' "${@}" | awk --source='{print $1}'; }
function map { xargs --no-run-if-empty --max-args=1 -- "${@}"; }
export -f -- contexts map

function pick {
  local -- bindings=(
    "ctrl-a:toggle-all"
    "ctrl-d:become(contexts {+} | map kubectl config delete-context)"
    "ctrl-l:become(contexts {+})"
    "ctrl-u:become(contexts {} | map kubectl config use-context)"
    "ctrl-w:become(kubectl config current-context)"
    "ctrl-z:clear-selection"
    "enter:become(contexts {} | map kubectl config use-context)"
  )
  fzf --bind="$(IFS=,; printf '%s' "${bindings[*]}")" "${@}"
}

kubectl config get-contexts \
  | awk --assign='OFS=\t' --source='NR==1||/^*/{print $2,$5,$3}NR>1&&!/^*/{print $1,$4,$2}' \
  | column --table --separator $'\t' \
  | pick --header="current: $(kubectl config current-context)" --header-lines=1 \
    --cycle --multi --nth=1,2 --exit-0
