#!/usr/bin/env bash

# K8S Mount PVC
# =============
# Tim Friske <me@tifr.de>
#
# Script that helps to look inside a Kubernetes Persistent Volume.
#
# This is especially useful if the code that ran inside a Kubernetes Pod failed
# for some unknown reason and you suspect the error was caused by some missing
# files or wrong file permissions.
#
# In order to accomplish that a Kubernetes Pod with a Container running the
# given image is launched. The Persistent Volume that corresponds to the given
# Persistent Volume Claim is attached to the Pod and mounted into the Container.
# Once the Pod is ready the given shell is started as an interactive shell.
#
# Deps:: bash, env, kubectl

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

# Input parameters and validation:
pvc="${1:-"${pvc:?required}"}"
image="${2:-ubuntu:22.04}"
shell="${3:-bash}"

# Derived parameters:
pod="k8s-mount-pvc-${pvc}"
# Kubernetes names are limited to 63 characters.
pod="${pod:0:63}"

echo "Creating pod '${pod}'..."
echo "Creating container 'mount' inside '${pod}'..."
echo "Running container 'mount' with image '${image}'..."
echo "Attaching persistent volume claim to 'mount'..."
echo "Mounting persistent volume under '/mnt' point..."
kubectl apply --filename=- \
<<POD_K8S_MOUNT_PVC
kind: Pod
apiVersion: v1
metadata:
  name: "${pod}"
spec:
  containers:
    - name: mount
      image: "${image}"
      command: [/bin/sh, -ceux, --]
      args: [tail -f /dev/null]
      volumeMounts:
        - name: "${pod}"
          mountPath: /mnt
  volumes:
    - name: "${pod}"
      persistentVolumeClaim:
       claimName: "${pvc}"
POD_K8S_MOUNT_PVC

echo "Waiting until pod '${pod}' is ready..."
kubectl wait pod --for=condition=Ready --timeout=30s -- "${pod}"

echo "Logging into pod '${pod}', container 'mount'..."
echo "Using '${shell}' as an interactive shell..."
kubectl exec "${pod}" --container=mount --stdin --tty -- "${shell}" || true

echo "Deleting pod '${pod}' in background..."
kubectl delete pod --wait=false -- "${pod}"
printf '%s\n' "Hint: Wait for pod deletion with:" "kubectl wait pod --for=delete --timeout=30s -- ${pod}"
