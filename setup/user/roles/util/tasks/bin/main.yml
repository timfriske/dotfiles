---
# User-specific Util setup
# ========================
# Tim Friske <me@tifr.de>

# Main tasks
# ----------
- name: Make target directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ bin_dir }}"

- name: Copy utility programs to binary directory
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ bin_dir }}/{{ item | basename }}"
    mode: preserve
  with_fileglob:
    - bin/*
  loop_control:
    label: "{{ item | relpath }}"

- name: Test if operating system is using Systemd
  ansible.builtin.find:
    patterns: systemctl
    paths: "{{ ansible_env.PATH.split(':') }}"
  register: systemctl

- name: Link utility program os to os-systemd
  ansible.builtin.set_fact:
    utility_program_os: { src: os-systemd, dest: "{{ bin_dir }}/os" }
  when: systemctl.matched != 0

- name: Link utility program os to os-uname
  ansible.builtin.set_fact:
    utility_program_os: { src: os-uname, dest: "{{ bin_dir }}/os" }
  when: systemctl.matched == 0

- name: Create shortcuts to utility programs
  ansible.builtin.file:
    src: "{{ link.src }}"
    dest: "{{ link.dest }}"
    force: yes
    state: link
  loop:
    - { src: df-common, dest: "{{ bin_dir }}/dfc" }
    - { src: du-dirs, dest: "{{ bin_dir }}/dud" }
    - { src: du-summary, dest: "{{ bin_dir }}/dus" }
    - { src: file-backup, dest: "{{ bin_dir }}/fb" }
    - { src: file-path, dest: "{{ bin_dir }}/fp" }
    - { src: file-type, dest: "{{ bin_dir }}/ft" }
    - { src: file-view, dest: "{{ bin_dir }}/fv" }
    - { src: lower-case, dest: "{{ bin_dir }}/lc" }
    - { src: upper-case, dest: "{{ bin_dir }}/uc" }
    - "{{ utility_program_os }}"
  loop_control:
    loop_var: link
    label: "{{ link.dest }} => {{ link.src }}"
