---
# System-wide installation
# ========================
# Tim Friske <me@tifr.de>

# Argo Workflows tasks
# --------------------

- name: Create Argo Workflows temporary directory
  ansible.builtin.tempfile:
    prefix: "{{ argo_workflows_program }}-"
    state: directory
  register: argo_workflows_temp_dir

- name: Download Argo Workflows program
  ansible.builtin.get_url:
    url: "{{ argo_workflows_url }}"
    dest: "{{ argo_workflows_temp_dir.path }}/{{ argo_workflows_archive_file }}"
    checksum: "{{ argo_workflows_checksum }}"

- name: Unpack Argo Workflows archive file
  ansible.builtin.shell: |
    gunzip --stdout -- "{{ argo_workflows_temp_dir.path }}/{{ argo_workflows_archive_file }}" \
      > "{{ argo_workflows_temp_dir.path }}/{{ argo_workflows_program }}"

- name: Install Argo Workflows program
  become: yes
  ansible.builtin.copy:
    src: "{{ argo_workflows_temp_dir.path }}/{{ argo_workflows_program }}"
    dest: "{{ local_bin_dir }}/{{ argo_workflows_program }}-{{ argo_workflows_version }}"
    mode: a+x

- name: Find Argo Workflows program paths
  ansible.builtin.find:
    path: "{{ local_bin_dir }}"
    pattern: "{{ argo_workflows_program }}-*"
  register: argo_workflows_program_paths

- name: Link Argo Workflows program (latest version)
  become: yes
  ansible.builtin.file:
    src: "{{ argo_workflows_program_paths.files | map(attribute='path') | community.general.version_sort | last | ansible.builtin.basename }}"
    dest: "{{ local_bin_dir }}/{{ argo_workflows_program }}"
    force: yes
    state: link
