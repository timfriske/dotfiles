#!/usr/bin/env bash

# Provisions Tim Friske's *dotfiles* Git repository and sets up the system this
# program is run on and the user this program is run as by executing the Ansible
# playbooks provided by that repository.
#
# Download this program from Tim Friske's *dotfiles* Git repository via its
# https://github.com/timfriske/dotfiles[GitHub page] either from the website or
# from the command line with one of these commands curl, wget2, wget depending
# on availability and preference.
#
# .Download shell script *bootstrap* with cURL.
# [source,bash]
# ----
# curl --fail --location --output timfriske-dotfiles-bootstrap -- \
#  https://raw.githubusercontent.com/timfriske/dotfiles/main/setup/bootstrap
# ----
#
# .Download shell script *bootstrap* with Wget.
# [source,bash]
# ----
# wget --output-document=timfriske-dotfiles-bootstrap -- \
#   https://raw.githubusercontent.com/timfriske/dotfiles/main/setup/bootstrap
# ----
#
# .Make shell script *bootstrap* executable and execute it.
# [source,bash]
# ----
# chmod --changes -- a+x timfriske-dotfiles-bootstrap
# ./timfriske-dotfiles-bootstrap
# ----
#
# Deps:: ansible, apt-get, bash, env, git, zypper

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

REPO_NAME="dotfiles"
REPO_USER_ID="timfriske"
REPO_USER_NAME="Tim Friske"
REPO_USER_EMAIL="me@tifr.de"
REPO_HOST="github.com"
REPO_PATH="${REPO_USER_ID}/${REPO_NAME}"
REPO_URL_HTTP="https://${REPO_HOST}/${REPO_PATH}.git"
REPO_URL_SSH="ssh://git@${REPO_HOST}/${REPO_PATH}.git"
REPO_DIR="${HOME}/Projects/mine/${REPO_USER_ID}/${REPO_NAME}"
REPO_GPG_SIG_KEY="7DC02297679182342252DFC4D0920BA3A28B1CF7!"

# Install minimal set of packages required by this program.
if command -v -- zypper &> /dev/null; then
  sudo zypper refresh
  sudo zypper install --no-confirm -- ansible git
elif command -v -- apt-get &> /dev/null; then
  sudo apt-get update
  sudo apt-get install --assume-yes -- ansible git
fi

# Clone Git repository.
if [[ ! -d "${REPO_DIR}" ]]; then
  mkdir --parents --verbose -- "${REPO_DIR}"
  git clone -- "${REPO_URL_HTTP}" "${REPO_DIR}"
  # Configure SSH fetch/push and user info, and checkout *next* branch.
  (
    # shellcheck disable=SC2164
    cd -- "${REPO_DIR}"
    git remote set-url -- origin "${REPO_URL_SSH}" "${REPO_URL_HTTP}"
    git config --local -- user.name "${REPO_USER_NAME}"
    git config --local -- user.email "${REPO_USER_EMAIL}"
    git config --local -- user.signingkey "${REPO_GPG_SIG_KEY}"
    git checkout --track origin/next
  )
  # Install Ansible collections and roles required by playbooks.
  ansible-galaxy collection install --requirements-file "${REPO_DIR}/setup/requirements.yml"
  ansible-galaxy role install -r "${REPO_DIR}/setup/requirements.yml"
fi

# Setup system and user via Ansible playbooks.
(
  # shellcheck disable=SC2164
  cd -- "${REPO_DIR}"
  setup/system/site --tags software
  setup/user/site
)
