#!/usr/bin/env bash
#
# GPG Key Generation for Personal Use
# ===================================
# Tim Friske <me@tifr.de>
#
# Generates _OpenPGP_ keys with _GPG_ for personal use for a given user ID
# following best practices:
#
#   * Only one user ID to keep identities separate.
#   * One key per capability to revoke them independently.
#   * Favor elliptic curve 25519 over NIST curve key algorithm.
#   * Favor elliptic curve 25519 over RSA key algorithm.
#   * One certification-only Ed25519 primary key.
#   * One signature-only Ed25519 secondary key.
#   * One encryption-only Cv25519 secondary key.
#   * One authentication-only Ed25519 secondary key.
#
# Upon the first run when given a user ID alone only the primary key is
# generated. Only when given the user ID *and* fingerprint of the previously
# generated primary key the three secondary keys are generated for the key with
# that fingerprint on the second run.

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

function gpg_gen_key_for_user {
  # Output _GPG_ version with which _OpenPGP_ keys are generated.
  gpg --version

  # User ID *must* be given as first parameter.
  user_id="${user_id-${1:-}}"

  # Key fingerprint *may* be given as second parameter.
  key_fpr="${key_fpr-${2:-}}"

  if [[ -z "$user_id" ]]; then
    echo 'Please specify a user ID of the form'
    echo '"Real Name (Comment) <real.name@example.com>"'
    echo 'where "Real Name" and "(Comment)" are optional.'
    echo 'An email address alone must be given without "<>".'
    exit 1
  elif [[ -z "$key_fpr" ]]; then
    # Upon first run:
    # Generate one certification-only Ed25519 primary key.
    gpg --quick-generate-key "$user_id" ed25519 cert 2y
  else
    # Upon second run:
    # Generate one signature-only Ed25519 secondary key.
    gpg --quick-add-key "$key_fpr" ed25519 sign 2y
    # Generate one encryption-only Cv25519 secondary key.
    gpg --quick-add-key "$key_fpr" cv25519 encr 2y
    # Generate one authentication-only Ed25519 secondary key.
    gpg --quick-add-key "$key_fpr" ed25519 auth 2y
  fi
}

gpg_gen_key_for_user "$@"
