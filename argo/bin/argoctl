#!/usr/bin/env bash

# Argo Control command
# ====================
# Tim Friske <me@tifr.de>
#
# Control objects managed by the `argo` program.
#
# Deps:: argo, awk, bash, env, fzf, kubectl, xargs

# Ensure fail-fast script execution.
shopt -os nounset noclobber pipefail errexit errtrace

function wfs { printf '%s\n' "${@}" | awk --source='{print $1}'; }
function seq { xargs --no-run-if-empty -- "${@}"; }
function map { xargs --no-run-if-empty --max-args=1 --open-tty -- "${@}"; }
export -f -- wfs seq map

function pick {
  local -- bindings=(
    'ctrl-a:toggle-all'
    'ctrl-d:become(wfs {+} | seq argo delete --)'
    'ctrl-e:become(wfs {+} | map kubectl edit workflow --)'
    'ctrl-f:become(wfs {}  | map argo logs --follow --)'
    'ctrl-g:become(wfs {+} | seq argo get --)'
    'ctrl-l:become(wfs {}  | map argo logs --)'
    'ctrl-r:become(wfs {+} | seq argo retry --)'
    'ctrl-w:become(wfs {}  | map argo watch --)'
    'ctrl-z:clear-selection'
    'enter:become(wfs {+})'
  )
  fzf --bind="$(IFS=,; printf '%s' "${bindings[*]}")" "${@}"
}

# Stop listing after first blank line followed by informative messages (awk).
argo list "${@}" \
  | awk --source='/^\s*$/{exit}{print}' \
  | pick --header-lines=1 --cycle --multi --nth=1,2 --exit-0
